image: gitlab-runner/prism

before_script:
  - chmod +x gradlew

stages:
  - build
  - test
  - deploy

variables:
  GRADLE: ./.gradle
  GRADLE_HOME: $GRADLE
  GRADLE_USER_HOME: $GRADLE

Build:
  stage: build
  script:
    - java -version
    - git submodule sync -- lib/prism
    - git submodule update --init -- lib/prism
    - (cd lib/prism/prism && make)
    - ./gradlew --no-daemon check distZip
  artifacts:
    paths:
      - build/distributions/
    when: on_success
    expire_in: 1 week
  cache:
    key: "build"
    untracked: true
    paths:
      - lib/prism
      - $GRADLE


.variables: &default_variables
  tool: build/pet/bin/pet
  args: ""
  JAVA_OPTS: -ea -Djava.util.logging.config.file=config/logging-quiet.properties
  const: ""

.core_variables: &core_variables
  <<: *default_variables
  unbounded_args: ''
  unbounded_heuristics: WEIGHTED PROB DIFFERENCE GRAPH_WEIGHTED GRAPH_DIFFERENCE
  step_bound: 50
  bounded_args: ''
  bounded_heuristics: WEIGHTED PROB DIFFERENCE GRAPH_WEIGHTED GRAPH_DIFFERENCE

.reachability_variables: &reach_variables
  <<: *default_variables
  heuristics: WEIGHTED PROB DIFFERENCE GRAPH_WEIGHTED GRAPH_DIFFERENCE

.test: &test_template
  stage: test
  before_script:
    - unzip -d build build/distributions/*.zip
  dependencies:
    - Build

.core_test: &core_test_template
  <<: *test_template
  script:
    - for heuristic in $unbounded_heuristics; do
        $tool core -m "$model" --const "$const" $args $unbounded_args --unbounded --heuristic $heuristic --validate;
      done
    - for heuristic in $bounded_heuristics; do
        $tool core -m "$model" --const "$const" $args $bounded_args --bounded "$step_bound" --bounded-update dense --heuristic $heuristic --validate;
      done

.reach_test: &reach_test_template
  <<: *test_template
  script:
    - for heuristic in $heuristics; do
        $tool reachability -m "$model" -p "$property_file" --property "$property" --const "$const" $args --heuristic $heuristic --expected "$expected";
      done


Core Zeroconf.20-2-0:
  variables:
    <<: *core_variables
    model: "data/models/zeroconf.prism"
    const: "N=20,K=2,reset=false"
    bounded_heuristics: WEIGHTED GRAPH_WEIGHTED
    bounded_args: --bounded-update dense
    step_bound: 25
  <<: *core_test_template

Core BRP.10-20:
  variables:
    <<: *core_variables
    model: "data/models/brp.pm"
    const: "N=10,MAX=20"
    unbounded_heuristics: WEIGHTED GRAPH_WEIGHTED
    bounded_heuristics: ''
  <<: *core_test_template

Core Cyclin.3:
  variables:
    <<: *core_variables
    model: "data/models/cyclin.sm"
    const: "N=3"
    unbounded_heuristics: ''
    bounded_heuristics: WEIGHTED
    bounded_args: --uniformization 30 --precision 1e-5
    step_bound: 100
  <<: *core_test_template

Core Philosophers-Nofair.3:
  variables:
    <<: *core_variables
    model: "data/models/phil-nofair3.nm"
    step_bound: 10
    bounded_args: --bounded-update dense
  <<: *core_test_template


Rabin.10.live:
  variables:
    <<: *reach_variables
    model: "data/models/rabin.10.prism"
    property_file: "data/properties/rabin.10.props"
    property: "live"
    expected: "1.0"
  <<: *reach_test_template

Pnueli-Zuck.10.live:
  variables:
    <<: *reach_variables
    model: "data/models/pnueli-zuck.10.prism"
    property_file: "data/properties/pnueli-zuck.props"
    property: "live"
    expected: "1.0"
  <<: *reach_test_template

Wlan.3.sent:
  variables:
    <<: *reach_variables
    model: "data/models/wlan.2.prism"
    const: "COL=0"
    property_file: "data/properties/wlan.props"
    property: "sent"
    expected: "true"
    heuristics: WEIGHTED GRAPH_WEIGHTED
  <<: *reach_test_template

Zeroconf.1000-8-0.correct_max:
  variables:
    <<: *reach_variables
    model: "data/models/zeroconf.prism"
    const: "N=1000,K=8,reset=false"
    property_file: "data/properties/zeroconf.props"
    property: "correct_max"
    expected: "4.80141363507243e-8"
  <<: *reach_test_template

Zeroconf.1000-8-0.correct_min:
  variables:
    <<: *reach_variables
    model: "data/models/zeroconf.prism"
    const: "N=1000,K=8,reset=false"
    property_file: "data/properties/zeroconf.props"
    property: "correct_min"
    expected: "5.040105212929839e-9"
  <<: *reach_test_template

Csma.3-2.some_before:
  variables:
    <<: *reach_variables
    model: "data/models/csma.3-2.prism"
    property_file: "data/properties/csma.props"
    property: "some_before"
    expected: "0.5859375"
  <<: *reach_test_template

Csma.3-2.all_before_min:
  variables:
    <<: *reach_variables
    model: "data/models/csma.3-2.prism"
    property_file: "data/properties/csma.props"
    property: "all_before_min"
    expected: "0.43496662487687193"
  <<: *reach_test_template

Csma.3-2.all_before_max:
  variables:
    <<: *reach_variables
    model: "data/models/csma.3-2.prism"
    property_file: "data/properties/csma.props"
    property: "all_before_max"
    expected: "0.8596150364756961"
  <<: *reach_test_template

Embedded.8-12.actuators:
  variables:
    <<: *reach_variables
    model: "data/models/embedded.prism"
    const: "MAX_COUNT=8,T=12"
    property_file: "data/properties/embedded.props"
    property: "actuators"
    expected: "0.1053036557931282"
    heuristics: DIFFERENCE
  <<: *reach_test_template

Polling.8-16.actuators:
  variables:
    <<: *reach_variables
    model: "data/models/polling.8.prism"
    const: "T=16"
    property_file: "data/properties/polling.props"
    property: "s1_before_s2"
    expected: "0.5405549556"
    heuristics: WEIGHTED
  <<: *reach_test_template